{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/grid.js"],"names":["App","message","debug","testing","configure","Promise","config","longStackTraces","environment","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","GridCustomElement","grid","possibles","attached","y","row","x","push","slice","value","applyGridNumber","cell","number","selectNumber","log","arguments"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA,MACX,eAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,cAAf;AACD;;;;;;;;oBCHY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiBC,sBAAYN,KADhB;AAEbO,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASN,SAAT,CAAmBO,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAIN,sBAAYN,KAAhB,EAAuB;AACrBS,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAIP,sBAAYL,OAAhB,EAAyB;AACvBQ,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBef,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;QCFYc,4BAAAA;AAGT,qCAAc;AAAA;;AACV,iBAAKC,IAAL,GAAY,EAAZ;AACA,iBAAKC,SAAL,GAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAjB;AACH;;oCAEDC,+BAAW;AACP,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,oBAAMC,MAAM,EAAZ;AACA,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxBD,wBAAIE,IAAJ,CAAS,EAAEL,WAAW,KAAKA,SAAL,CAAeM,KAAf,EAAb,EAAqCC,OAAO,CAA5C,EAAT;AACH;AACD,qBAAKR,IAAL,CAAUM,IAAV,CAAeF,GAAf;AACH;AACJ;;oCAEDK,2CAAgBL,KAAKM,MAAMC,QAAQ;AAC/B,iBAAKX,IAAL,CAAUI,GAAV,EAAeM,IAAf,EAAqBF,KAArB,GAA6BG,MAA7B;AACH;;oCAEDC,qCAAaR,KAAKM,MAAMC,QAAQ;AAAA;;AAC5B,iBAAKF,eAAL,CAAqBL,GAArB,EAA0BM,IAA1B,EAAgCC,MAAhC;AACA,iCAAQE,GAAR,iBAAeC,SAAf;AACH","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class GridCustomElement {\n\n\n    constructor() {\n        this.grid = [];\n        this.possibles = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    }\n\n    attached() {\n        for (let y = 0; y < 9; y++) {\n            const row = [];\n            for (let x = 0; x < 9; x++) {\n                row.push({ possibles: this.possibles.slice(), value: 0 });\n            }\n            this.grid.push(row);\n        }\n    }\n\n    applyGridNumber(row, cell, number) {\n        this.grid[row][cell].value = number;\n    }\n\n    selectNumber(row, cell, number) {\n        this.applyGridNumber(row, cell, number);\n        console.log(...arguments);\n    }\n}"],"sourceRoot":"../src"}